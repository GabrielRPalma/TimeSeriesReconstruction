poisson_features6,
poisson_features7,
poisson_features8,
poisson_features9)
poisson_features$Distribution <- rep('Poisson', nrow(poisson_features))
simulation_features_data <- rbind(nbinomial_features,
poisson_features)
colnames(simulation_features_data)
colnames(simulation_features_data) <- c("features_complete", "feature_name", "lags",
"feature_week", "error", "abs_error",
"Data_source", "Association",
"Initial training samples", "simulation", "Distribution")
simulation_features_data$`Initial training samples` <- factor(simulation_features_data$`Initial training samples`)
simulation_features_data %>%
group_by(Distribution, `Initial training samples`, simulation, abs_error, Association, Data_source, feature_week) %>%
count(feature_name) %>%
group_by(Distribution, `Initial training samples`, simulation, Association, Data_source) %>%
summarise(cor = cor(n, abs_error))
simulation_features_data %>%
group_by(Distribution, `Initial training samples`, simulation, abs_error, Association, Data_source, feature_week) %>%
count(feature_name) %>%
group_by(Distribution, `Initial training samples`, simulation, Association, Data_source) %>%
summarise(cor = cor(n, abs_error)) %>%
ggplot(mapping = aes(x = `Initial training samples`, y = cor)) +
geom_boxplot() +
facet_wrap(Association~Data_source, scales = "free", ncol = 3) +
xlab("Absolute error") +
ylab("Number of climate features") +
theme_new()
simulation_features_data %>%
group_by(Distribution, `Initial training samples`, simulation, abs_error, Association, Data_source, feature_week) %>%
count(feature_name) %>%
group_by(Distribution, `Initial training samples`, simulation, Association, Data_source) %>%
summarise(cor = cor(n, abs_error)) %>%
ggplot(mapping = aes(x = `Initial training samples`, y = cor)) +
geom_boxplot() +
facet_wrap(Association~Data_source, scales = "free", ncol = 3) +
xlab("Initial training samples") +
ylab("Correlation between \n Number of climate features and absolyte error") +
theme_new()
simulation_features_data %>%
group_by(Distribution, `Initial training samples`, simulation, abs_error, Association, Data_source, feature_week) %>%
count(feature_name) %>%
group_by(Distribution, `Initial training samples`, simulation, Association, Data_source) %>%
summarise(cor = cor(n, abs_error)) %>%
ggplot(mapping = aes(x = `Initial training samples`, y = cor)) +
geom_boxplot() +
facet_wrap(Association~Data_source, scales = "free", ncol = 3) +
xlab("Initial training samples") +
ylab("Correlation between \n Number of climate features and absolute error") +
theme_new()
simulation_performance_data %>%
filter(`Initial training samples` == '30') %>%
ggplot(mapping = aes(x = Approach, y = RSME, fill = Method)) +
geom_boxplot() +
facet_wrap(Association~Data_source, scales = "free_y") +
theme_new() +
scale_fill_manual(values = c('#E67E22', "#232323", "purple")) +
scale_colour_manual(values = c('#E67E22', "#232323", "purple"))
simulation_performance_data %>%
filter(`Initial training samples` == '60') %>%
ggplot(mapping = aes(x = Approach, y = RSME, fill = Method)) +
geom_boxplot() +
facet_wrap(Association~Data_source, scales = "free_y") +
theme_new() +
scale_fill_manual(values = c('#E67E22', "#232323", "purple")) +
scale_colour_manual(values = c('#E67E22', "#232323", "purple"))
simulation_performance_data %>%
filter(`Initial training samples` == '60') %>%
ggplot(mapping = aes(x = Approach, y = RSME, fill = Method)) +
geom_boxplot() +
facet_wrap(Association~Data_source, scales = "free_y") +
theme_new() +
scale_fill_manual(values = c('#E67E22', "#232323", "purple")) +
scale_colour_manual(values = c('#E67E22', "#232323", "purple"))
simulation_features_data %>%
group_by(Distribution, `Initial training samples`, simulation, abs_error, Association, Data_source, feature_week) %>%
count(feature_name) %>%
group_by(Distribution, `Initial training samples`, simulation, Association, Data_source) %>%
summarise(cor = cor(n, abs_error)) %>%
ggplot(mapping = aes(x = `Initial training samples`, y = cor)) +
geom_boxplot() +
facet_wrap(Association~Data_source, scales = "free", ncol = 3) +
xlab("Initial training samples") +
ylab("Correlation between \n Number of climate features and absolute error") +
theme_new()
passo_fundo_data <- read_excel(here('Input_data/Aphids/passo_fundo_data.xlsx'))
passo_fundo_data <- passo_fundo_data %>% dplyr::select(tmax, tmin, tmean,
pmm, Ur, Wmax, Wmean,
St5cm, St10cm, Aphids)
colnames(passo_fundo_data) <- c("tmax", "tmin", "tmean",  "pmm",
"Ur", "Wmax", "Wmean",  "St5cm",
"St10cm", "Target")
# Preparing the simulation study to check if we need to change something -----
passo_fundo_data$Target <- read.csv('02_simulation_study/server_simulation/input_data/scenario1/scenario1_arimax100_nbinomial_rep11.csv')[,-1]
data_source <- 'p = 1'
association <- 'Scenario 1'
resultado1 <- obtain_all_approaches_performance(data_source = data_source,
association = association,
time_series = passo_fundo_data)
passo_fundo_data$Target <- read.csv('02_simulation_study/server_simulation/input_data/scenario1/scenario1_arimax300_nbinomial_rep11.csv')[,-1]
data_source <- 'p = 3'
association <- 'Scenario 1'
plot.ts(passo_fundo_data$Target)
resultado2 <- obtain_all_approaches_performance(data_source = data_source,
association = association,
time_series = passo_fundo_data)
passo_fundo_data$Target <- read.csv('02_simulation_study/server_simulation/input_data/scenario1/scenario1_arimax500_nbinomial_rep11.csv')[,-1]
data_source <- 'p = 5'
association <- 'Scenario 1'
plot.ts(passo_fundo_data$Target)
resultado3 <- obtain_all_approaches_performance(data_source = data_source,
association = association,
time_series = passo_fundo_data)
passo_fundo_data$Target <- read.csv('02_simulation_study/server_simulation/input_data/scenario2/scenario2_arimax100_nbinomial_rep11.csv')[,-1]
data_source <- 'p = 1'
association <- 'Scenario 2'
plot.ts(passo_fundo_data$Target)
resultado4 <- obtain_all_approaches_performance(data_source = data_source,
association = association,
time_series = passo_fundo_data)
passo_fundo_data$Target <- read.csv('02_simulation_study/server_simulation/input_data/scenario2/scenario2_arimax300_nbinomial_rep11.csv')[,-1]
data_source <- 'p = 3'
association <- 'Scenario 2'
plot.ts(passo_fundo_data$Target)
resultado5 <- obtain_all_approaches_performance(data_source = data_source,
association = association,
time_series = passo_fundo_data)
passo_fundo_data$Target <- read.csv('02_simulation_study/server_simulation/input_data/scenario2/scenario2_arimax500_nbinomial_rep11.csv')[,-1]
data_source <- 'p = 5'
association <- 'Scenario 2'
plot.ts(passo_fundo_data$Target)
resultado6 <- obtain_all_approaches_performance(data_source = data_source,
association = association,
time_series = passo_fundo_data)
passo_fundo_data$Target <- read.csv('02_simulation_study/server_simulation/input_data/scenario3/scenario3_arimax100_nbinomial_rep11.csv')[,-1]
data_source <- 'p = 1'
association <- 'Scenario 3'
plot.ts(passo_fundo_data$Target)
resultado7 <- obtain_all_approaches_performance(data_source = data_source,
association = association,
time_series = passo_fundo_data)
passo_fundo_data$Target <- read.csv('02_simulation_study/server_simulation/input_data/scenario3/scenario3_arimax300_nbinomial_rep11.csv')[,-1]
data_source <- 'p = 3'
association <- 'Scenario 3'
plot.ts(passo_fundo_data$Target)
resultado8 <- obtain_all_approaches_performance(data_source = data_source,
association = association,
time_series = passo_fundo_data)
passo_fundo_data$Target <- read.csv('02_simulation_study/server_simulation/input_data/scenario3/scenario3_arimax500_nbinomial_rep11.csv')[,-1]
data_source <- 'p = 5'
association <- 'Scenario 3'
plot.ts(passo_fundo_data$Target)
resultado9 <- obtain_all_approaches_performance(data_source = data_source,
association = association,
time_series = passo_fundo_data)
scenarios_performance_data <- rbind(resultado1$performance_dataset,
resultado2$performance_dataset,
resultado3$performance_dataset,
resultado4$performance_dataset,
resultado5$performance_dataset,
resultado6$performance_dataset,
resultado7$performance_dataset,
resultado8$performance_dataset,
resultado9$performance_dataset)
sink('02_simulation_study/server_simulation/output_data/General_performance10.csv')
write.csv(scenarios_performance_data)
sink()
scenarios_features_data <- rbind(resultado1$reconstructed_features,
resultado2$reconstructed_features,
resultado3$reconstructed_features,
resultado4$reconstructed_features,
resultado5$reconstructed_features,
resultado6$reconstructed_features,
resultado7$reconstructed_features,
resultado8$reconstructed_features,
resultado9$reconstructed_features)
sink('02_simulation_study/server_simulation/output_data/General_features10.csv')
write.csv(scenarios_features_data)
sink()
####################################################################################################
###
### File:    04_results_visualisation.r
### Purpose: Provide visualisations for the obtained results.
### Authors: Gabriel Palma and Rodrigo Mello
### Date:    10/09/23
###
####################################################################################################
# Loading packages -----
source('00_source.R')
### Plotting the results of the simulation study ###
nbinomial_performance1 <- read.csv('02_simulation_study/server_simulation/output_data/Nbinomial/General_performance1.csv')[,-1]
nbinomial_performance2 <- read.csv('02_simulation_study/server_simulation/output_data/Nbinomial/General_performance2.csv')[,-1]
nbinomial_performance3 <- read.csv('02_simulation_study/server_simulation/output_data/Nbinomial/General_performance3.csv')[,-1]
nbinomial_performance4 <- read.csv('02_simulation_study/server_simulation/output_data/Nbinomial/General_performance4.csv')[,-1]
nbinomial_performance5 <- read.csv('02_simulation_study/server_simulation/output_data/Nbinomial/General_performance5.csv')[,-1]
nbinomial_performance6 <- read.csv('02_simulation_study/server_simulation/output_data/Nbinomial/General_performance6.csv')[,-1]
nbinomial_performance7 <- read.csv('02_simulation_study/server_simulation/output_data/Nbinomial/General_performance7.csv')[,-1]
nbinomial_performance8 <- read.csv('02_simulation_study/server_simulation/output_data/Nbinomial/General_performance8.csv')[,-1]
nbinomial_performance9 <- read.csv('02_simulation_study/server_simulation/output_data/Nbinomial/General_performance9.csv')[,-1]
nbinomial_performance <- rbind(nbinomial_performance1,
nbinomial_performance2,
nbinomial_performance3,
nbinomial_performance4,
nbinomial_performance5,
nbinomial_performance6,
nbinomial_performance7,
nbinomial_performance8,
nbinomial_performance9)
nbinomial_performance$Distribution <- rep('Negative \n binomial', nrow(nbinomial_performance))
poisson_performance1 <- read.csv('02_simulation_study/server_simulation/output_data/Poisson/General_performance.csv')[,-1]
poisson_performance2 <- read.csv('02_simulation_study/server_simulation/output_data/Poisson/General_performance2.csv')[,-1]
poisson_performance3 <- read.csv('02_simulation_study/server_simulation/output_data/Poisson/General_performance3.csv')[,-1]
poisson_performance4 <- read.csv('02_simulation_study/server_simulation/output_data/Poisson/General_performance4.csv')[,-1]
poisson_performance5 <- read.csv('02_simulation_study/server_simulation/output_data/Poisson/General_performance5.csv')[,-1]
poisson_performance6 <- read.csv('02_simulation_study/server_simulation/output_data/Poisson/General_performance6.csv')[,-1]
poisson_performance7 <- read.csv('02_simulation_study/server_simulation/output_data/Poisson/General_performance7.csv')[,-1]
poisson_performance8 <- read.csv('02_simulation_study/server_simulation/output_data/Poisson/General_performance8.csv')[,-1]
poisson_performance9 <- read.csv('02_simulation_study/server_simulation/output_data/Poisson/General_performance9.csv')[,-1]
poisson_performance10 <- read.csv('02_simulation_study/server_simulation/output_data/poisson/General_performance10.csv')[,-1]
poisson_performance <- rbind(poisson_performance1,
poisson_performance2,
poisson_performance3,
poisson_performance4,
poisson_performance5,
poisson_performance6,
poisson_performance7,
poisson_performance8,
poisson_performance9)
poisson_performance$Distribution <- rep('Poisson', nrow(poisson_performance))
simulation_performance_data <- rbind(nbinomial_performance, poisson_performance)
simulation_performance_data$Approach <- factor(simulation_performance_data$Approach)
levels(simulation_performance_data$Approach) <- c("All \n climate \n time \n series",
"Naive \n up \n to \n 3 \n lags",
"Naive \n up \n to \n 6 \n lags",
"Time \n series \n reconstruction")
colnames(simulation_performance_data) <- c("Approach", "Method", "Data_source",
"Association", "Corr", "RSME",
"Initial training samples",
"Testing_samples", "Distribution")
simulation_performance_data$`Initial training samples` <- factor(simulation_performance_data$`Initial training samples`)
simulation_performance_data %>%
filter(`Initial training samples` == '60') %>%
ggplot(mapping = aes(x = Approach, y = RSME, fill = Method)) +
geom_boxplot() +
facet_wrap(Association~Data_source, scales = "free_y") +
theme_new() +
scale_fill_manual(values = c('#E67E22', "#232323", "purple")) +
scale_colour_manual(values = c('#E67E22', "#232323", "purple"))
simulation_performance_data %>%
group_by(`Initial training samples` == '60', Method) %>%
summarise(mean = mean(RSME))
simulation_performance_data$`Initial training samples`
simulation_performance_data %>%
group_by(`Initial training samples`, Method) %>%
summarise(mean = mean(RSME))
simulation_performance_data %>%
group_by(`Initial training samples`, Method) %>%
summarise(mean = mean(RSME),
se = se(RMSE))
simulation_performance_data %>%
group_by(`Initial training samples`, Method) %>%
summarise(mean = mean(RSME),
sd = sd(RMSE))
simulation_performance_data %>%
group_by(`Initial training samples`, Method) %>%
summarise(mean = mean(RSME),
sd = max(RMSE))
simulation_performance_data %>%
group_by(`Initial training samples`, Method) %>%
summarise(mean = mean(RSME))
simulation_performance_data %>%
group_by(`Initial training samples`, Method) %>%
summarise(mean = mean(RSME),
sd = sd = sd(RSME))
simulation_performance_data %>%
group_by(`Initial training samples`, Method) %>%
summarise(mean = mean(RSME),
sd = sd(RSME))
simulation_performance_data %>%
group_by(`Initial training samples`, Method) %>%
summarise(mean = mean(RSME),
sd = var(RSME))
simulation_performance_data %>%
group_by(`Initial training samples`, Method)
simulation_performance_data %>%
group_by(Association, Data_source, Approach, `Initial training samples`, Method) %>%
summarise(mean = mean(RSME),
sd = sd(RSME))
View(simulation_performance_data %>%
group_by(Association, Data_source, Approach, `Initial training samples`, Method) %>%
summarise(mean = mean(RSME),
sd = sd(RSME)))
View(simulation_performance_data %>%
group_by(Association, Data_source, Approach, `Initial training samples`) %>%
summarise(mean = mean(RSME),
sd = sd(RSME)))
simulation_performance_data %>%
ggplot(mapping = aes(x = Approach, y = RSME, fill = Method,
group = `Initial training samples`)) +
geom_boxplot() +
facet_wrap(Association~Data_source, scales = "free_y") +
theme_new() +
scale_fill_manual(values = c('#E67E22', "#232323", "purple")) +
scale_colour_manual(values = c('#E67E22', "#232323", "purple"))
simulation_performance_data %>%
ggplot(mapping = aes(x = Approach, y = RSME, fill = Method,
colour = `Initial training samples`)) +
geom_boxplot() +
facet_wrap(Association~Data_source, scales = "free_y") +
theme_new() +
scale_fill_manual(values = c('#E67E22', "#232323", "purple")) +
scale_colour_manual(values = c('#E67E22', "#232323", "purple"))
simulation_performance_data %>%
ggplot(mapping = aes(x = Approach, y = RSME, fill = `Initial training samples`)) +
geom_boxplot() +
facet_wrap(Association~Data_source, scales = "free_y") +
theme_new()
simulation_performance_data %>%
ggplot(mapping = aes(x = Approach, y = RSME, fill = `Initial training samples`)) +
geom_boxplot() +
facet_wrap(Association~Data_source, scales = "free_y") +
theme_new()  +
scale_fill_manual(values = c('#E67E22', "#232323")) +
scale_colour_manual(values = c('#E67E22', "#232323"))
simulation_performance_data %>%
ggplot(mapping = aes(x = Approach, y = RSME, colour = `Initial training samples`)) +
geom_boxplot() +
facet_wrap(Association~Data_source, scales = "free_y") +
theme_new()  +
scale_fill_manual(values = c('#E67E22', "#232323")) +
scale_colour_manual(values = c('#E67E22', "#232323"))
simulation_performance_data %>%
filter(`Initial training samples` == '60') %>%
ggplot(mapping = aes(x = Approach, y = RSME, colour = Method)) +
geom_boxplot() +
facet_wrap(Association~Data_source, scales = "free_y") +
theme_new() +
scale_fill_manual(values = c('#E67E22', "#232323", "purple")) +
scale_colour_manual(values = c('#E67E22', "#232323", "purple"))
simulation_performance_data %>%
ggplot(mapping = aes(x = Approach, y = RSME, colour = `Initial training samples`)) +
geom_boxplot() +
facet_wrap(Association~Data_source, scales = "free_y") +
theme_new()  +
scale_fill_manual(values = c('#E67E22', "#232323")) +
scale_colour_manual(values = c('#E67E22', "#232323"))
simulation_performance_data %>%
group_by(Association, Data_source, Approach, `Initial training samples`) %>%
summarise(mean = mean(RSME),
sd = sd(RSME))
simulation_performance_data %>%
group_by(Association, Data_source, `Initial training samples`) %>%
summarise(mean = mean(RSME),
sd = sd(RSME))
a <- simulation_performance_data %>%
group_by(Association, Data_source, `Initial training samples`) %>%
summarise(mean = mean(RSME),
sd = sd(RSME))
a %>%
filter(`Initial training samples` == "30")
b %>%
filter(`Initial training samples` == "30")
a %>%
filter(`Initial training samples` == "60")
simulation_performance_data %>%
filter(`Initial training samples` == '60') %>%
ggplot(mapping = aes(x = Approach, y = RSME, colour = Method)) +
geom_boxplot() +
facet_wrap(Association~Data_source, scales = "free_y") +
theme_new() +
scale_fill_manual(values = c('#E67E22', "#232323", "purple")) +
scale_colour_manual(values = c('#E67E22', "#232323", "purple"))
simulation_performance_data %>%
group_by(`Initial training samples`) %>%
summarise(mean = mean(RMSE),
sd = sd(RMSE))
simulation_performance_data %>%
group_by(`Initial training samples`) %>%
summarise(mean = mean(RSME),
sd = sd(RSME))
simulation_performance_data %>%
group_by(`Initial training samples`, Method) %>%
summarise(mean = mean(RSME),
sd = sd(RSME))
simulation_performance_data %>%
filter(`Initial training samples` == '60') %>%
group_by(Method) %>%
summarise(mean = mean(RSME),
sd = sd(RSME))
simulation_performance_data %>%
filter(`Initial training samples` == '60') %>%
group_by(Approach) %>%
summarise(mean = mean(RSME),
sd = sd(RSME))
simulation_performance_data %>%
ggplot(mapping = aes(x = Approach, y = RSME, colour = `Initial training samples`)) +
geom_boxplot() +
facet_wrap(Association~Data_source, scales = "free_y") +
theme_new()  +
scale_fill_manual(values = c('#E67E22', "#232323")) +
scale_colour_manual(values = c('#E67E22', "#232323"))
nbinomial_features1 <- read.csv('02_simulation_study/server_simulation/output_data/Nbinomial/General_features1.csv')[,-1]
nbinomial_features1$simulation <- rep('1', nrow(nbinomial_features1))
nbinomial_features2 <- read.csv('02_simulation_study/server_simulation/output_data/Nbinomial/General_features2.csv')[,-1]
nbinomial_features2$simulation <- rep('2', nrow(nbinomial_features2))
nbinomial_features3 <- read.csv('02_simulation_study/server_simulation/output_data/Nbinomial/General_features3.csv')[,-1]
nbinomial_features3$simulation <- rep('3', nrow(nbinomial_features3))
nbinomial_features4 <- read.csv('02_simulation_study/server_simulation/output_data/Nbinomial/General_features4.csv')[,-1]
nbinomial_features4$simulation <- rep('4', nrow(nbinomial_features4))
nbinomial_features5 <- read.csv('02_simulation_study/server_simulation/output_data/Nbinomial/General_features5.csv')[,-1]
nbinomial_features5$simulation <- rep('5', nrow(nbinomial_features5))
nbinomial_features6 <- read.csv('02_simulation_study/server_simulation/output_data/Nbinomial/General_features6.csv')[,-1]
nbinomial_features6$simulation <- rep('6', nrow(nbinomial_features6))
nbinomial_features7 <- read.csv('02_simulation_study/server_simulation/output_data/Nbinomial/General_features7.csv')[,-1]
nbinomial_features7$simulation <- rep('7', nrow(nbinomial_features7))
nbinomial_features8 <- read.csv('02_simulation_study/server_simulation/output_data/Nbinomial/General_features8.csv')[,-1]
nbinomial_features8$simulation <- rep('8', nrow(nbinomial_features8))
nbinomial_features9 <- read.csv('02_simulation_study/server_simulation/output_data/Nbinomial/General_features9.csv')[,-1]
nbinomial_features9$simulation <- rep('9', nrow(nbinomial_features9))
#nbinomial_features10 <- read.csv('02_simulation_study/server_simulation/output_data/Nbinomial/General_features10.csv')[,-1]
#nbinomial_features10$simulation <- rep('10', nrow(nbinomial_features1))
nbinomial_features <- rbind(nbinomial_features1,
nbinomial_features2,
nbinomial_features3,
nbinomial_features4,
nbinomial_features5,
nbinomial_features6,
nbinomial_features7,
nbinomial_features8,
nbinomial_features9)
nbinomial_features$Distribution <- rep('Negative \n binomial', nrow(nbinomial_features))
poisson_features1 <- read.csv('02_simulation_study/server_simulation/output_data/Poisson/General_features.csv')[,-1]
poisson_features1$simulation <- rep('1', nrow(poisson_features1))
poisson_features2 <- read.csv('02_simulation_study/server_simulation/output_data/Poisson/General_features2.csv')[,-1]
poisson_features2$simulation <- rep('2', nrow(poisson_features2))
poisson_features3 <- read.csv('02_simulation_study/server_simulation/output_data/Poisson/General_features3.csv')[,-1]
poisson_features3$simulation <- rep('3', nrow(poisson_features3))
poisson_features4 <- read.csv('02_simulation_study/server_simulation/output_data/Poisson/General_features4.csv')[,-1]
poisson_features4$simulation <- rep('4', nrow(poisson_features4))
poisson_features5 <- read.csv('02_simulation_study/server_simulation/output_data/Poisson/General_features5.csv')[,-1]
poisson_features5$simulation <- rep('5', nrow(poisson_features5))
poisson_features6 <- read.csv('02_simulation_study/server_simulation/output_data/Poisson/General_features6.csv')[,-1]
poisson_features6$simulation <- rep('6', nrow(poisson_features6))
poisson_features7 <- read.csv('02_simulation_study/server_simulation/output_data/Poisson/General_features7.csv')[,-1]
poisson_features7$simulation <- rep('7', nrow(poisson_features7))
poisson_features8 <- read.csv('02_simulation_study/server_simulation/output_data/Poisson/General_features8.csv')[,-1]
poisson_features8$simulation <- rep('8', nrow(poisson_features8))
poisson_features9 <- read.csv('02_simulation_study/server_simulation/output_data/Poisson/General_features9.csv')[,-1]
poisson_features9$simulation <- rep('9', nrow(poisson_features9))
poisson_features10 <- read.csv('02_simulation_study/server_simulation/output_data/poisson/General_features10.csv')[,-1]
poisson_features10$simulation <- rep('10', nrow(poisson_features10))
poisson_features <- rbind(poisson_features1,
poisson_features2,
poisson_features3,
poisson_features4,
poisson_features5,
poisson_features6,
poisson_features7,
poisson_features8,
poisson_features9)
poisson_features$Distribution <- rep('Poisson', nrow(poisson_features))
simulation_features_data <- rbind(nbinomial_features,
poisson_features)
colnames(simulation_features_data) <- c("features_complete", "feature_name", "lags",
"feature_week", "error", "abs_error",
"Data_source", "Association",
"Initial training samples", "simulation", "Distribution")
simulation_features_data$`Initial training samples` <- factor(simulation_features_data$`Initial training samples`)
data <- simulation_features_data %>%
group_by(Distribution, `Initial training samples`, simulation, abs_error, Association, Data_source, feature_week) %>%
count(feature_name) %>%
group_by(Distribution, `Initial training samples`, simulation, Association, Data_source) %>%
summarise(cor = cor(n, abs_error))
data %>%
filter(Association == 'Scenario 1' )
data %>%
filter(Association == 'Scenario 1' & Data_source == 'p = 3')
data %>%
filter(Association == 'Scenario 1' & Data_source == 'p = 3') %>%
group_by(`Initial training samples`) %>%
summarise(mean = mean(cor),
sd = sd(cor))
data %>%
filter(Association == 'Scenario 1' & Data_source == 'p = 5') %>%
group_by(`Initial training samples`) %>%
summarise(mean = mean(cor),
sd = sd(cor))
data %>%
filter(Association == 'Scenario 2' & Data_source == 'p = 5') %>%
group_by(`Initial training samples`) %>%
summarise(mean = mean(cor),
sd = sd(cor))
simulation_features_data %>%
group_by(Distribution, `Initial training samples`, simulation, abs_error, Association, Data_source, feature_week) %>%
count(feature_name) %>%
group_by(Distribution, `Initial training samples`, simulation, Association, Data_source) %>%
summarise(cor = cor(n, abs_error)) %>%
ggplot(mapping = aes(x = `Initial training samples`, y = cor)) +
geom_boxplot() +
facet_wrap(Data_source~Association, scales = "free", ncol = 3) +
xlab("Initial training samples") +
ylab("Correlation between \n Number of climate features and absolute error") +
theme_new()
simulation_performance_data %>%
filter(`Initial training samples` == '60') %>%
ggplot(mapping = aes(x = Approach, y = RSME, colour = Method)) +
geom_boxplot() +
facet_wrap(Data_source~Association, scales = "free_y") +
theme_new() +
scale_fill_manual(values = c('#E67E22', "#232323", "purple")) +
scale_colour_manual(values = c('#E67E22', "#232323", "purple"))
